[include]
  path = .gitconfig_user
[includeIf "gitdir:~/workspace/github.com/dwangojp/"]
  path = ~/dotfiles/gitconfig/work.ini
[includeIf "gitdir:~/workspace/github.com/wassen/"]
  path = ~/dotfiles/gitconfig/private.ini
[core]
	excludesfile = ~/.gitignore_global
	quotepath = false
  ; pager = "view -"
[color]
	ui = auto
  ; pager = no
[color "grep"]
	match = reverse "#3FBCA3" 
	context = normal
	linenumber = bold white
	filename = bold "#E8AC6B"
# Commands
[commit]
	verbose = true
[diff]
	tool = vim
	algorithm = patience
	color-words = true
[difftool "vim"]
	; vimdiffと変わらん
	cmd = "nvim -d $LOCAL $REMOTE"
[merge]
	tool = nvimdiff
[mergetool]
	keepBackup = false
	path       = nvim
[rebase]
	autosquash = true
[show]
	color-words = true
[status]
	short  = true
	branch = true
[switch]
  ; どっちも動かん
  ; guess  = false
  ; no-guess  = true
[alias]
# co              = checkout
	detach          = switch --detach
	diffw           = diff --word-diff
	diffc           = diff --color-words
	graph           = log --graph --oneline --decorate=full
	showc           = show --color-words
	shinchoku       = !git diff --stat -p $(git log --before=today.midnight --format=%h | head -1) @
	squeeze         = commit --amend --no-edit --reset-author
	makepatch       = !git diff > .git_patch
	applypatch      = apply .git_patch
	open            = "!f() { open $(git config remote.origin.url | sed -Ee 's!(git@|git://|ssh://)!https://!' -e 's!https://.*@github!https://github!' -e 's!.git$!!')/pull/$1; }; f"
	#open=! open http://$(git config remote.origin.url | sed -e \"s/^[a-z]*:\/\///\" | sed -e "s/git@//" | tr ":" "/")
  # open            = !open $(git config remote.origin.url | sed -Ee 's!(git@|git://|ssh://)!http://!' -e 's!:([^/])!/\\1!' -e 's!.jp.git!.jp!')
  # open-new-pr     = !open "$(git config remote.origin.url | sed -Ee 's!(git@|git://|ssh://)!http://!' -e 's!:([^/])!/\\1!' -e 's!.jp.git!.jp!')/pull/new/$(git rev-parse --abbrev-ref HEAD)"
  # open-current-pr = !open "$(git config remote.origin.url | sed -Ee 's!(git@|git://|ssh://)!http://!' -e 's!:([^/])!/\\1!' -e 's!.git!!')/pull/$(git branch --show-current)"
	open-test       = "!f() { echo $(git config remote.origin.url | sed -Ee 's!(git@|git://|ssh://)!https://!' -e 's!https://.*@github!https://github!' -e 's!.git$!!')/pull/$1; }; f"
	pick            = cherry-pick
	private-config  = !git config --replace-all user.name wassen && git config --replace-all user.email wassen@users.noreply.github.com
  working-config  = !git config --replace-all user.name kazuki-asayama-d && git config --replace-all user.email "29850739+kazuki-asayama-d@users.noreply.github.com"
  # not work
  # replace-in-repo = "!f() { git grep -l $1 | xargs sed -i '' -e 's/$1/$2/g'; }; f"
	fetch-pr        = "!f() { git fetch origin pull/$1/head:$1; }; f"
	co-pr           = "!f() { git fetch origin pull/$1/head:$1 && git checkout $1; }; f"
	choimachi       = !git reset --soft @~
	mouiiyo         = !git commit --reuse-message ORIG_HEAD
	lost-found      = "!f() { for blob in $(git fsck --lost-found | grep blob | cut -d ' ' -f 3 ); do if git --no-pager show $blob | grep --quiet $1; then echo $blob; fi; done; }; f"
	logref          = "!f() { git --no-pager log --walk-reflogs | fzf; }; f"

	workspace       = "!f() { git worktree add -b $1 $HOME/workspace/worktrees/$(basename $([ -d .git ] && git rev-parse --show-toplevel || cat .git | cut -f 2 -d \":\" | sed \"s/\\.git\\/.*//\"))/$1; }; f"
  # not work
  # vimdiff         = "!f() { echo $1 | xargs -I{} bash -c 'vim -d <(git show HEAD:{}) {}'; }; f"
[ghq]
	root = ~/workspace
[credential]
	helper = osxkeychain
[push]
	default = current
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
